# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список
# только числами. Класс-исключение должен контролировать типы данных элементов списка.

# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит
# работу скрипта, введя, например, команду “stop”. При этом скрипт завершается,
# сформированный список с числами выводится на экран.

# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список,
# только если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить
# соответствующее сообщение. При этом работа скрипта не должна завершаться.

class NumbersFoEva(Exception):
    def __init__(self, txt):
        self.txt = txt


some_list = []

while True:
    a = input("Введите целое число или \"stop\" для остановки ")
    if a == "stop":
        break
    try:
        if not a.isdigit():
            raise NumbersFoEva("Нужно целое ввести число")

        a = int(a)
    except NumbersFoEva as err:
        print(err)
    else:
        some_list.append(a)

print(some_list)

